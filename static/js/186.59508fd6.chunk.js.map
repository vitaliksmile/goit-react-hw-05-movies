{"version":3,"file":"static/js/186.59508fd6.chunk.js","mappings":"mRACMA,EAAU,mCACVC,EAAW,+BAEV,SAASC,IACd,OAAOC,EAAAA,GAAAA,IAAA,UACGF,EADH,uCAC0CD,IAC9CI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CAEM,SAASC,EAAgBC,GAC9B,OAAON,EAAAA,GAAAA,IAAA,UAEAF,EAFA,iCAEiCD,EAFjC,iCAEiES,IAErEL,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CACM,SAASG,EAAgBC,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UACGF,EADH,kBACqBU,EADrB,oBACwCX,EADxC,oBAEJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,GACJ,CACM,SAASM,EAAgBD,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEkBU,EAFlB,4BAE6CX,EAF7C,oBAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKO,IACtB,GACJ,CACM,SAASC,EAAgBH,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEkBU,EAFlB,4BAE6CX,EAF7C,2BAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,C,8ECbD,UA7BA,WACE,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAgBH,GAASP,MAAK,SAAAE,GAAI,OAAIY,EAAWZ,EAAf,GACnC,GAAE,CAACK,IAECM,EAEkB,IAAnBA,EAAQG,OACH,4CAIP,+BACE,0BACE,wBACGH,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADE,UAVA,IAoBtB,C","sources":["components/MoviedApi.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '35c9323b204760b5af2587bbf9b07e41';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function GetTrending() {\n  return axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n}\n\nexport function GetSearchMovies(query) {\n  return axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\nexport function GetMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => {\n      return response.data;\n    });\n}\nexport function GetMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast;\n    });\n}\nexport function GetMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { GetMovieReviews } from '../MoviedApi';\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    GetMovieReviews(movieId).then(data => setReviews(data));\n  }, [movieId]);\n\n  if (!reviews) return null;\n\n  if (reviews.length === 0) {\n    return 'We don`t have any revlews for this movie';\n  }\n\n  return (\n    <>\n      <div>\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","GetTrending","axios","then","response","data","results","GetSearchMovies","query","GetMovieDetails","movieId","GetMovieCredits","cast","GetMovieReviews","useParams","useState","reviews","setReviews","useEffect","length","map","id","author","content"],"sourceRoot":""}