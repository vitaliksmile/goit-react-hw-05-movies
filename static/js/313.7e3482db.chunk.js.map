{"version":3,"file":"static/js/313.7e3482db.chunk.js","mappings":"mRACMA,EAAU,mCACVC,EAAW,+BAEV,SAASC,IACd,OAAOC,EAAAA,GAAAA,IAAA,UACGF,EADH,uCAC0CD,IAC9CI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CAEM,SAASC,EAAgBC,GAC9B,OAAON,EAAAA,GAAAA,IAAA,UAEAF,EAFA,iCAEiCD,EAFjC,iCAEiES,IAErEL,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CACM,SAASG,EAAgBC,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UACGF,EADH,kBACqBU,EADrB,oBACwCX,EADxC,oBAEJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,GACJ,CACM,SAASM,EAAgBD,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEkBU,EAFlB,4BAE6CX,EAF7C,oBAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKO,IACtB,GACJ,CACM,SAASC,EAAgBH,GAC9B,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEkBU,EAFlB,4BAE6CX,EAF7C,2BAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,C,+IC5COQ,EAAYC,EAAQ,IAApBD,QACKE,EAAWC,EAAAA,GAAAA,GAAH,mEAIRC,GAAOD,EAAAA,EAAAA,IAAOH,EAAPG,CAAH,mHAOJE,EAASF,EAAAA,GAAAA,OAAH,+xCAmDNG,EAAOH,EAAAA,GAAAA,KAAH,4CAGJI,EAAQJ,EAAAA,GAAAA,MAAH,wiB,SCflB,EAhDe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMrB,EAAQe,EAAaO,IAAb,UAAiB,SAAjB,EAA4B,IACpCC,GAAWC,EAAAA,EAAAA,MAkBjB,OALAC,EAAAA,EAAAA,YAAU,WACHzB,IACLD,EAAAA,EAAAA,IAAgBC,GAAOL,MAAK,SAAAE,GAAI,OAAIsB,EAAUtB,EAAd,GACjC,GAAE,CAACG,KAGF,4BACE,UAACY,EAAD,CAAMc,SAdW,SAAAC,GAGnB,GAFAA,EAAEC,iBACFZ,EAAgB,CAAEhB,MAAOoB,IACX,KAAVA,EAAc,OAAOS,MAAM,+BAC/BR,EAAS,GACV,EASG,WACE,SAACR,EAAD,CACEiB,SApBa,SAAAH,GACnBN,EAASM,EAAEI,cAAcC,MAAMC,cAChC,EAmBOD,MAAOZ,EACPc,KAAK,OACLC,YAAY,yBAEd,SAACxB,EAAD,CAAQuB,KAAK,SAAb,uBAEDhB,IACC,wBACGA,EAAOkB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC9B,EAAD,WACE,SAACE,EAAD,CAAM6B,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMlB,GAA1C,SACGc,KAFUC,EADL,QAWrB,C","sources":["components/MoviedApi.js","components/Movies/Movies.styled.js","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '35c9323b204760b5af2587bbf9b07e41';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function GetTrending() {\n  return axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n}\n\nexport function GetSearchMovies(query) {\n  return axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\nexport function GetMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => {\n      return response.data;\n    });\n}\nexport function GetMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast;\n    });\n}\nexport function GetMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\n","import styled from 'styled-components';\nconst { NavLink } = require('react-router-dom');\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n  color: darkblue;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: darkblue;\n  :hover {\n    color: CornflowerBlue;\n  }\n`;\nexport const Button = styled.button`\n  align-items: center;\n  appearance: none;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #53000086 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: HoneyDew;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding: 5px;\n\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 18px;\n  margin-left: 20px;\n  font-size: 11px;\n  background-color: darkblue;\n\n  :focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #53000086 0 -3px 0 inset;\n  }\n\n  :hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #53000086 0 -3px 0 inset;\n    transform: translateY(-2px);\n    background-color: darkblue;\n  }\n\n  :active {\n    box-shadow: #53000086 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n\nexport const Form = styled.form`\n  margin-top: 5px;\n`;\nexport const Input = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20%;\n  border: 0;\n  font-family: inherit;\n  padding: 5px;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 400;\n  background: lavender;\n  box-shadow: inset 0 -1px 0 rgba($dark, 0.3);\n  color: $dark;\n  transition: all 0.15s ease;\n\n  :hover {\n    background: rgba($dark, 0.04);\n    box-shadow: inset 0 -1px 0 rgba($dark, 0.5);\n  }\n\n  :focus {\n    background: rgba($dark, 0.05);\n    outline: none;\n    box-shadow: inset 0 -2px 0 $primary;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { GetSearchMovies } from '../MoviedApi';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, Form, Input, Link, ListItem } from './Movies.styled';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState([]);\n  const [input, setInput] = useState('');\n  const query = searchParams.get('query' ?? '');\n  const location = useLocation();\n\n  const handleChange = e => {\n    setInput(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: input });\n    if (input === '') return alert('Write the name of the movie');\n    setInput('');\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    GetSearchMovies(query).then(data => setSearch(data));\n  }, [query]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={handleChange}\n          value={input}\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {search && (\n        <ul>\n          {search.map(({ title, id }) => (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </ListItem>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","GetTrending","axios","then","response","data","results","GetSearchMovies","query","GetMovieDetails","movieId","GetMovieCredits","cast","GetMovieReviews","NavLink","require","ListItem","styled","Link","Button","Form","Input","useSearchParams","searchParams","setSearchParams","useState","search","setSearch","input","setInput","get","location","useLocation","useEffect","onSubmit","e","preventDefault","alert","onChange","currentTarget","value","toLowerCase","type","placeholder","map","title","id","to","state","from"],"sourceRoot":""}